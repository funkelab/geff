name: Test geff

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags: [v*]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  SETUPTOOLS_SCM_PRETEND_VERSION: "0.0"

jobs:
  test-agnostic:
    uses: ./.github/workflows/test.yaml
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    with:
      python-version: ${{ matrix.python-version }}
      platform: ${{ matrix.platform }}
      test-target: "tests/*.py"
      witty-cache: false
      install-extras: "dev"
  
  test-networkx:
    uses: ./.github/workflows/test.yaml
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    with:
      python-version: ${{ matrix.python-version }}
      platform: ${{ matrix.platform }}
      test-target: "tests/test_networkx"
      witty-cache: false
      install-extras: "dev,networkx"

  test-spatial-graph:
    uses: ./.github/workflows/test.yaml
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    with:
      python-version: ${{ matrix.python-version }}
      platform: ${{ matrix.platform }}
      test-target: "tests/test_spatial_graph"
      witty-cache: true
      install-extras: "dev,spatial-graph"

  schema:
    name: Check json schema
    runs-on: ubuntu-latest
    env:
      testjson: check-json.json
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache-dependency-path: "pyproject.toml"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install .

      - name: Generate json 
        run: python scripts/export_json_schema.py --filename $testjson

      - run: cat $testjson

      - name: Compare hashes
        if: ${{ hashFiles( env.testjson ) != hashFiles('geff-schema.json') }}
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('geff-schema.json needs to be updated by locally running `pixi run update-json`. ${{ hashFiles( env.testjson ) }} vs ${{ hashFiles('geff-schema.json') }}')

  deploy:
    name: Deploy
    # TODO: Add back successful test requirement once package is more stable
    # needs: test
    # if: success() && startsWith(github.ref, 'refs/tags/') && github.event_name != 'schedule'
    if: startsWith(github.ref, 'refs/tags/') && github.event_name != 'schedule'
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: üë∑ Build
        run: |
          python -m pip install build
          python -m build

      - name: üö¢ Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      - uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: "./dist/*"