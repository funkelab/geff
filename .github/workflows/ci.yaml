name: Test geff

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags: [v*]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: ${{ matrix.platform }} (${{ matrix.python-version }})
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        platform: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache-dependency-path: "pyproject.toml"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -e .[dev,spatial-graph]

      - name: Get witty cache directory
        id: cache-path
        run: |
          import Cython.Utils
          import os

          cache_path = os.path.join(Cython.Utils.get_cython_cache_dir(), "witty")

          with open(os.environ["GITHUB_OUTPUT"], "a") as fh:
              print(f"path={cache_path}", file=fh)
        shell: python

      - name: Check for witty cache
        uses: actions/cache/restore@v4
        id: witty-cache
        with:
          path: ${{ steps.cache-path.outputs.path }}
          key: $${{ matrix.platform }} - ${{ matrix.python-version }}

      - name: Test
        run: pytest --color=yes --cov --cov-report=xml --cov-report=term-missing

      - name: Coverage
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Save witty cache
        uses: actions/cache/save@v4
        with:
          path: ${{ steps.cache-path.outputs.path }}
          key: $${{ matrix.platform }} - ${{ matrix.python-version }}

  deploy:
    name: Deploy
    # TODO: Add back successful test requirement once package is more stable
    # needs: test
    # if: success() && startsWith(github.ref, 'refs/tags/') && github.event_name != 'schedule'
    if: startsWith(github.ref, 'refs/tags/') && github.event_name != 'schedule'
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: üë∑ Build
        run: |
          python -m pip install build
          python -m build

      - name: üö¢ Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      - uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: "./dist/*"